/*! 
 * db-grid
 * Lightweight angular grid
 * @version 1.1.0 
 * 
 * Copyright (c) 2016 David Benson, Steve Gentile 
 * @link https://github.com/SMARTDATASYSTEMSLLC/db-grid 
 * @license  MIT 
 */

angular.module("db-grid",[]),function(){"use strict";function a(){return function(a){return a.toLowerCase().replace(/ (\w)/g,function(a,b){return b.toUpperCase()})}}angular.module("db-grid").filter("camelCase",a)}(),function(){"use strict";function a(a){return function(b,c){if("string"==typeof c)return a("filter")(b,c);var d=function(a,b){for(var c=b.split(".");c.length&&(a=a[c.shift()]););return a},e=[];return angular.forEach(c,function(a){if("date"===a.type&&a.filter){var b=a.filter.split("-"),c=new Date(b[0]),d=new Date(b[1]||c.valueOf()+864e5);isNaN(c)||isNaN(d)||e.push({filter:[c.valueOf(),d.valueOf()],key:a.key,type:a.type})}else if("number"===a.type&&a.filter){var f=a.filter.split("-");!f[0]&&f[1]&&(console.log(f),f.shift(),f[0]*=-1,console.log(f)),!f[1]&&f[2]&&(console.log(f),f.splice(1,1),f[1]*=-1,console.log(f)),""===f[1]&&(f[1]=Number.MAX_VALUE);var g=parseFloat(f[0]),h=parseFloat(f[1]||f[0]);e.push({filter:[g,h],key:a.key,type:a.type})}else if("bool"===a.type&&a.filter){var i=a.filter.toLowerCase();(i==="no".substr(0,i.length)||i==="false".substr(0,i.length)||i===a.falseFilter.substr(0,i.length))&&(i=!1),e.push({filter:!!i,key:a.key,type:a.type})}else a.filter&&"string"==typeof a.filter&&e.push({filter:a.filter.toLowerCase(),key:a.key})}),a("filter")(b,function(a){for(var b=-1,c=e.length;++b<c;){var f=e[b];if(f.key){if(!f.type&&angular.isObject(d(a,f.key))&&f.filter.length>=2&&-1===JSON.stringify(d(a,f.key)).toLowerCase().indexOf(f.filter)||!f.type&&-1===(d(a,f.key)+"").toLowerCase().indexOf(f.filter)||"bool"===f.type&&Boolean(d(a,f.key))!==f.filter||"number"===f.type&&(d(a,f.key)<f.filter[0]||d(a,f.key)>f.filter[1]))return!1;if("date"===f.type){var g=new Date(d(a,f.key)).valueOf();if(g<f.filter[0]||g>f.filter[1])return!1}}}return!0})}}a.$inject=["$filter"],angular.module("db-grid").filter("complexFilter",a)}(),function(){"use strict";function a(){return function(a){return(null===a||void 0===a||""===a)&&(a=" "),a=(a+"").replace(/([A-Z])/g," $1"),a[0].toUpperCase()+a.slice(1)}}angular.module("db-grid").filter("labelCase",a)}(),function(){"use strict";function a(){return function(a,b,c){return a&&a.length?(b=parseInt(b||0,10)||0,c=parseInt(c||0,10),c||(c=25),a.slice(b*c,(b+1)*c)):[]}}angular.module("db-grid").filter("page",a)}(),function(){"use strict";function a(a){return{restrict:"A",link:function(b,c){if("function"==typeof b._col.template)c.append(b._col.template(b));else if(!c.html().trim()){var d=angular.element("<span>"+b._col.template+"</span>"),e=a(d);c.append(d),e(b),c.data("compiled",e)}b._col.colClass&&c.addClass(b._col.colClass)}}}a.$inject=["$compile"],angular.module("db-grid").directive("dbBindCell",a)}(),function(){"use strict";function a(a){return{restrict:"E",require:"^dbGrid",compile:function(b){var c=b.html().trim();return b.empty(),function(b,d,e,f){var g=null;!c&&e.key&&(c="{{"+f.rowName+"."+e.key+"}}"),g="true"===e.bind?c:a(c);var h={index:d.prevAll("db-col").length,filter:e.query,width:e.width,colClass:e.colClass,key:e.key,label:e.label,canSort:"false"===e.canSort?!1:!!e.key,type:e.type,title:e.title,bind:"true"===e.bind,template:g};f.addColumn(h),void 0!==e.query&&e.$observe("query",function(a,b){a!==b&&(h.filter=a,f.refresh())}),b.$on("$destroy",function(){f.removeColumn(h)})}}}}a.$inject=["$interpolate"],angular.module("db-grid").directive("dbCol",a)}(),function(){"use strict";function a(a,b,c,d){return{restrict:"E",transclude:!0,scope:!0,templateUrl:"db-grid/table-directives/db-grid.html",compile:function(a,b){var c=b["for"].split(" ");if(1!==c.length&&"in"!==c[1])return void d.error("Invalid loop");a.find("tbody").children().attr("ng-repeat",c[0]+" in _model.filteredItems");var e=b.rowClick;e&&a.find("tbody").children().attr("ng-click",e)},controller:["$scope","$element","$attrs",function(d,e,f){function g(a,b,e,f,g){if(d._model.items){var h=o(d._model.items,a);return b&&(h=p(h,b,!e)),d._model.total=h?h.length:0,c.when(q(h,f,g))}return c.when(null)}function h(a){d._model.sort===a?d._model.sortAsc=!d._model.sortAsc:d._model.sort=a,d._model.refresh()}function i(){angular.forEach(d._model.cols,function(a){a.filter=""}),d._model.refresh()}function j(a){return a.title?a.title:"bool"===a.type?"Filter using yes, no, true, or false":a.type?"Use a dash (-) to specify a range":void 0}function k(){for(var a=[],b=1;b<=d._model.total/d._model.pageSize+1;b++)b>d._model.currentPage-5&&b<d._model.currentPage+5&&a.push(b);return a}function l(a){d._model.currentPage=a,n()}function m(a){d.$grid.noResetRefreshFlag||a===!1?d.$grid.noResetRefreshFlag=!1:(d._model.currentPage=1,d._model.isApi&&(d._model.filteredItems=null)),n()}function n(){d._model.getItems(d._model.showAdvancedFilter?d._model.cols:d._model.filterText,null!==d._model.sort?d._model.cols[d._model.sort].key:null,d._model.sortAsc,d._model.currentPage-1,d._model.pageSize,d._model.cols).then(function(a){d._model.filteredItems=a})}var o=a("complexFilter"),p=a("orderBy"),q=a("page"),r=function(a,b){var c;return function(){var d=this,e=arguments,f=function(){c=null,a.apply(d,e)};clearTimeout(c),c=setTimeout(f,b)}};d._model={isApi:!1,label:f.label,tableClass:f.tableClass,currentPage:1,total:0,sortAsc:f.sort?"-"!==f.sort[0]:!0,sort:null,filterText:null,showAdvancedFilter:!1,pageSize:f.pageSize?parseInt(f.pageSize,10):25,filterType:(f.filter||"advanced").toLowerCase(),cols:[],items:null,filteredItems:null,getTooltip:j,getItems:g,toggleSort:h,clearFilters:i,getPages:k,setPage:l,refresh:r(n,100),waiting:!1},d.$grid={refresh:r(m,100),items:function(){return d._model.filteredItems},noResetRefreshFlag:!1};var s=f["for"].split(" ");this.rowName=s[0],s[2]&&d.$watchCollection(s.slice(2).join(" "),function(a){d.$grid.noResetRefreshFlag?d.$grid.noResetRefreshFlag=!1:d._model.currentPage=1,d._model.filteredItems=null,d._model.items=a,d._model.refresh()}),this.addColumn=function(a){var b=f.sort||"";("-"===b[0]||"+"===b[0])&&(b=b.slice(1)),b&&b===a.key&&null===d._model.sort?(d._model.sort=d._model.cols.length,d._model.refresh()):d._model.sort>a.index&&(d._model.sort+=1),a.filter&&(d._model.showAdvancedFilter=!0),d._model.cols.splice(a.index,0,a)},this.removeColumn=function(a){var b=d._model.cols.indexOf(a);b>-1&&(d._model.cols.splice(b,1),d._model.sort>=b&&(d._model.sort-=1,-1===d._model.sort&&(d._model.sort=null)))},this.setDataSource=function(a){b(function(){d._model.getItems=a,d._model.isApi=!0,d._model.refresh.cancel(),d.$grid.refresh.cancel(),d._model.refresh=r(n,1e3),d.$grid.refresh=r(m,1e3),n()})},this.setTotal=function(a){d._model.total=a},this.setWaiting=function(a){d._model.waiting=a},this.refresh=function(a){(d._model.items||a)&&m()},void 0!==f.query&&f.$observe("query",function(a,b){a!==b&&(angular.isString(a)&&(d._model.filterText=a),d._model.refresh())})}]}}a.$inject=["$filter","$timeout","$q","$log"],angular.module("db-grid").directive("dbGrid",a)}(),function(){"use strict";function a(){return{restrict:"EA",link:function(a,b,c,d,e){e(function(c,d){b.empty(),d.$grid=a.$grid,b.append(c)})}}}angular.module("db-grid").directive("dbTransclude",a)}(),function(){"use strict";function a(){return{restrict:"A",require:["ngModel","^?form"],link:function(a,b,c,d){var e={};angular.copy(d[0],e),d[1]&&d[1].$removeControl(d[0]);var f={$addControl:angular.noop,$removeControl:angular.noop,$setValidity:function(){},$setDirty:function(){b.removeClass("ng-pristine").addClass("ng-dirty"),d[0].$dirty=!0,d[0].$pristine=!1},$setPristine:function(){b.removeClass("ng-dirty").addClass("ng-pristine"),d[0].$dirty=!1,d[0].$pristine=!0}};angular.extend(d[0],f)}}}angular.module("db-grid").directive("isolateControl",a)}(),angular.module("db-grid").run(["$templateCache",function(a){"use strict";a.put("db-grid/table-directives/db-grid.html",'<div class="table-responsive db-grid"> <div class="btn-toolbar"> <a ng-if="_model.showAdvancedFilter" href="" class="btn btn-default" ng-click="_model.clearFilters()">Clear All Filters <span class="big-x">&times;</span></a> <div ng-if="!_model.showAdvancedFilter && _model.filterType !== \'none\'" class="toolbar-input"> <div class="form-group has-feedback"> <input class="form-control" type="text" ng-model="_model.filterText" ng-keyup="$grid.refresh()" placeholder="Filter {{_model.label || \'items\'}}" isolate-control> <a href="" ng-click="_model.filterText = \'\'; $grid.refresh()" class="form-control-feedback feedback-link">&times;</a> </div> </div> <a href="" ng-if="_model.filterType === \'advanced\'" class="btn btn-default" ng-class="{\'btn-primary\': _model.showAdvancedFilter}" ng-click="_model.showAdvancedFilter = !_model.showAdvancedFilter">{{_model.showAdvancedFilter ? \'Simple\' : \'Advanced\'}} Filtering</a> <db-transclude></db-transclude> <p ng-if="_model.total && _model.label"><i>{{_model.total}} {{_model.label}}</i></p> </div> <table class="table db-grid table-hover {{_model.tableClass}}"> <thead> <tr ng-if="_model.showAdvancedFilter"> <th ng-repeat="_col in _model.cols" ng-style="{width: _col.width}" class="{{_col.colClass}}"> <div ng-if="::_col.canSort"> <input type="text" class="form-control filter-input" ng-keyup="$grid.refresh()" ng-model="_col.filter" placeholder="Filter {{::_col.label || (_col.key | labelCase)}}" tooltip="{{_model.getTooltip(_col)}}" tooltip-trigger="focus" tooltip-placement="top" isolate-control> </div>   <tr> <th ng-repeat="_col in _model.cols" ng-style="{width: _col.width}" class="{{_col.colClass}}"> <a href="" ng-if="::_col.canSort" ng-click="_model.toggleSort($index)">{{::_col.label || (_col.key | labelCase) }}&nbsp;<i class="fa" style="display: inline" ng-class="{\n                         \'fa-sort\'     : _model.sort !== $index,\n                         \'fa-sort-down\': _model.sort === $index &&  _model.sortAsc,\n                         \'fa-sort-up\'  : _model.sort === $index && !_model.sortAsc\n                         }"></i> </a> <span ng-if="::!_col.canSort"> {{::_col.label || (_col.key | labelCase)}} </span>    <tbody ng-show="!_model.waiting"> <tr> <td ng-repeat="_col in _model.cols" db-bind-cell>   </table> <div ng-if="_model.filteredItems && _model.filteredItems.length === 0 && _model.label && !_model.waiting" class="db-summary"> No {{_model.label}}. </div> <ul class="pagination" ng-if="_model.total > _model.pageSize && !_model.waiting"> <li ng-if="_model.currentPage > 1"> <a href="" aria-label="First" ng-click="_model.setPage(1)"> <span aria-hidden="true">First</span> </a> </li> <li class="disabled" ng-if="_model.currentPage <= 1"> <a href="" aria-label="First"> <span aria-hidden="true">First</span> </a> </li> <li ng-if="_model.currentPage > 1"> <a href="" aria-label="Previous" ng-click="_model.setPage(_model.currentPage - 1)"> <span aria-hidden="true">&lt;</span> </a> </li> <li class="disabled" ng-if="_model.currentPage <= 1"> <a href="" aria-label="Previous"> <span aria-hidden="true">&lt;</span> </a> </li> <li ng-repeat="page in _model.getPages()" ng-class="{active: page === _model.currentPage}"> <a href="" ng-click="_model.setPage(page)">{{page}}</a> </li> <li ng-if="_model.currentPage < (_model.total / _model.pageSize)"> <a href="" aria-label="Next" ng-click="_model.setPage(_model.currentPage + 1)"> <span aria-hidden="true">&gt;</span> </a> </li> <li class="disabled" ng-if="_model.currentPage >= (_model.total / _model.pageSize)"> <a href="" aria-label="Next" class="disabled"> <span aria-hidden="true">&gt;</span> </a> </li> <li ng-if="_model.currentPage < (_model.total / _model.pageSize)"> <a href="" aria-label="Last" ng-click="_model.setPage(1 + (_model.total - (_model.total % _model.pageSize)) / _model.pageSize)"> <span aria-hidden="true">Last ({{1 + (_model.total - (_model.total % _model.pageSize)) / _model.pageSize}})</span> </a> </li> <li class="disabled" ng-if="_model.currentPage >= (_model.total / _model.pageSize)"> <a href="" aria-label="Last" class="disabled"> <span aria-hidden="true">Last ({{1 + (_model.total - (_model.total % _model.pageSize)) / _model.pageSize}})</span> </a> </li> </ul> <div ng-show="_model.waiting"> <i class="fa fa-circle-o-notch fa-spin"></i> Please Wait... </div> </div>')}]);
//# sourceMappingURL=db-grid.min.js.map